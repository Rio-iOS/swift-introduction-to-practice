/*
 ユニットテスト：プログラムの構成要素を個別に検証する手法
    - プログラムの各部に対して様々な入力を与え、その出力が期待通りになることを確認する
 */

/*
 ユニットテストの目的
 
 プログラミング -> 小さなプログラムを組み合わせて、より大きなプログラムを構成する
 
 ユニットテスト：小さなプログラムレベルで動作の検証を行う手法
 
 ユニットテストによる検証は、テスト用のプログラムによって行われるため実行コストが低く、
 プログラムの更新ごとにすべてのテストを繰り返し実行することが一般的である。
 */

/*
 テストは、コアライブラリであるXCTestを使って記述する
 ユニットテストを用いることで、プログラムの特定の箇所を、様々な条件で検証できる。
 手入力でのテストに比べると、その実行コストは無視できる程度のもの
 そのため、変更の箇所にかかわらず、すべてのテストを実行することが一般的である。
 そうすることで、予期しない形でバグを混入してしまうことを防げる
 */

/*
 テストターゲットは、Package.swiftの.testTarget(name:dependencies:)の箇所で宣言される
 
 ユニットテストのソースコードは、ターゲット名と同名であるDemoTestsディレクトリ以下に配置する。
 テンプレートとして生成されるDemoTests.swiftのtestExample()メソッドには、Demoモジュールで定義されているDemo型に対するテストが記述されている
 */

/*
 テストは、XCTestCaseクラスを継承したクラス内に記述する
 「test」で始まる名前のメソッドが、それぞれテストとなる
 
 XCTestCaseクラスを利用するには、コアライブラリである「XCTest」をインポートする必要がある
 */

/*
 動作の検証は、XCTestが提供するアサーションを行う
 */
